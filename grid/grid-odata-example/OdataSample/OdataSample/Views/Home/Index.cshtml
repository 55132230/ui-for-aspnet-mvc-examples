@(Html.Kendo().Grid<OdataSample.Models.ProductDTO>()
                .Name("grid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.ProductName);
                    columns.Bound(p => p.QuantityPerUnit).Width(300);
                    columns.Bound(p => p.UnitPrice).Width(200);
                    columns.Bound(p => p.UnitsInStock).Width(200);
                    columns.Bound(p => p.UnitsOnOrder).Width(200);
                    columns.Bound(p => p.Discontinued).Width(100);
                    columns.Command(cmd => cmd.Destroy()).Width(100);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.Create();
                    toolbar.Save();
                })
                .Filterable()
                .HtmlAttributes(new { style = "height:650px;" })
                .Scrollable()
                .Navigatable()
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                .DataSource(dataSource => dataSource
                    .Custom()
                    .Batch(true)
                    .Type("odata-v4")
                    .Schema(schema => schema
                        .Model(m =>
                        {
                            m.Id(t => t.ProductID);
                            m.Field(t => t.ProductID).Editable(false);
                            m.Field(t => t.ProductName);
                            m.Field(t => t.CategoryID).DefaultValue(8);
                            m.Field(t => t.SupplierID).DefaultValue(4);
                            m.Field(t => t.QuantityPerUnit);
                            m.Field(t => t.UnitPrice);
                            m.Field(t => t.UnitsInStock);
                            m.Field(t => t.UnitsOnOrder);
                            m.Field(t => t.Discontinued);
                        }))
                    .Transport(t =>
                    {
                        t.Read(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "read" } });
                        t.Update(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "update" } });
                        t.Create(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "create" } });
                        t.Destroy(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "destroy" } });
                        t.Batch(new { url = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "batch" } });
                    })
                    .PageSize(20)
                    .ServerPaging(true)
                    .ServerSorting(true)
                    .ServerFiltering(true)
                )
                .Pageable()
                .Sortable()
)
<script>
        function batch() {
            return "http://localhost:54339/odata/$batch";
        }
        function read() {
            return "http://localhost:54339/odata/Products";
        }
        function update(dataItem) {
            return "http://localhost:54339/odata/Products(" + dataItem.ProductID + ")";
        }
        function create(dataItem) {
            delete dataItem.ProductID;
            return "http://localhost:54339/odata/Products";
        }
        function destroy(dataItem) {
            return "http://localhost:54339/odata/Products(" + dataItem.ProductID + ")";
        }
</script>
